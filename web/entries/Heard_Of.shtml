<!DOCTYPE public "-//w3c//dtd html 4.01 transitional//en"
		"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>Archive of Formal Proofs</title>
  <link rel="stylesheet" type="text/css" href="front.css">
  <link rel="icon" href="../images/favicon.ico" type="image/icon">
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>
<body>

<table width="100%">
  <tbody>
    <tr>
      <td width="20%" align="center" valign="top">
      <!-- navigation -->
      <!--#include file="nav.html"-->
      </td>
      <td width="80%" valign="top">
      <!-- content -->

<div align="center">
<p> </p>

<h1><font class="first">V</font>erifying
<font class="first">F</font>ault-Tolerant
<font class="first">D</font>istributed
<font class="first">A</font>lgorithms
in
the
<font class="first">H</font>eard-Of
<font class="first">M</font>odel
</h1>
<p></p>
<table width="80%" class="data">
  <tbody>
    <tr><td class="datahead" width="20%">Title:</td>
        <td class="data" width="80%">Verifying Fault-Tolerant Distributed Algorithms in the Heard-Of Model</td></tr>

    <tr><td class="datahead">Author:</td>
        <td class="data">Henri Debrat (henri /dot/ debrat /at/ loria /dot/ fr) and <a href="http://www.loria.fr/~merz/">Stephan Merz</a></td></tr>

    <tr><td class="datahead">Submission date:</td>
        <td class="data">2012-07-27</td></tr>

    <tr><td class="datahead" valign="top">Abstract:</td>
        <td class="abstract">


Distributed computing is inherently based on replication, promising
increased tolerance to failures of individual computing nodes or
communication channels. Realizing this promise, however, involves
quite subtle algorithmic mechanisms, and requires precise statements
about the kinds and numbers of faults that an algorithm tolerates (such
as process crashes, communication faults or corrupted values).  The
landmark theorem due to Fischer, Lynch, and Paterson shows that it is
impossible to achieve Consensus among N asynchronously communicating
nodes in the presence of even a single permanent failure. Existing
solutions must rely on assumptions of "partial synchrony".
<p>
Indeed, there have been numerous misunderstandings on what exactly a given
algorithm is supposed to realize in what kinds of environments. Moreover, the
abundance of subtly different computational models complicates comparisons
between different algorithms. Charron-Bost and Schiper introduced the Heard-Of
model for representing algorithms and failure assumptions in a uniform
framework, simplifying comparisons between algorithms.
<p>
In this contribution, we represent the Heard-Of model in Isabelle/HOL. We define
two semantics of runs of algorithms with different unit of atomicity and relate
these through a reduction theorem that allows us to verify algorithms in the
coarse-grained semantics (where proofs are easier) and infer their correctness
for the fine-grained one (which corresponds to actual executions). We
instantiate the framework by verifying six Consensus algorithms that differ in
the underlying algorithmic mechanisms and the kinds of faults they tolerate.
        </td></tr>

    <tr><td class="datahead" valign="top">BibTeX:</td>
        <td class="formatted">
			<pre>@article{Heard_Of-AFP,
  author  = {Henri Debrat and Stephan Merz},
  title   = {Verifying Fault-Tolerant Distributed Algorithms in the Heard-Of Model},
  journal = {Archive of Formal Proofs},
  month   = jul,
  year    = 2012,
  note    = {\url{http://afp.sf.net/entries/Heard_Of.shtml},
            Formal proof development},
  ISSN    = {2150-914x},
}</pre>
        </td></tr>

    <tr><td class="datahead">License:</td>
        <td class="data"><a href="http://afp.sourceforge.net/LICENSE">BSD License</a></td></tr>


<!--#set var="status" value="-STATUS-" -->
<!--#set var="version" value="-VERSION-" -->
<!--#set var="afp-version" value="-AFPVERSION-" -->
<!---INCLUDE- file="devel-warning.shtml"-->

  </tbody>
</table>

<p></p>

<!--#set var="name" value="Heard_Of" -->
<!--#set var="binfo" value="../browser_info/current/HOL/${name}" -->

<!--#set var="doc" value="${binfo}/document.pdf" -->
<!--#set var="outline" value="${binfo}/outline.pdf" -->
<!--#set var="browse" value="${binfo}/index.html" -->
<!--#set var="tar" value="../release/afp-${name}-current.tar.gz" -->

<table class="links">
  <tbody>
    <tr>
  <td class="links">
	<a href="<!--#echo var="outline" -->">Proof outline</a><br>
	<a href="<!--#echo var="doc" -->">Proof document</a>
  </td>
	<!-- link to README.hmtl if no document exists -->	
	</tr>
    <tr>
  <td class="links">
	<a href="<!--#echo var="browse" -->">Browse theories</a>
	</td></tr>
    <tr>
  <td class="links"> 
	<a href="<!--#echo var="tar" -->">Download this entry</a>
	</td>
  </tr>
    <tr><td class="links">Older releases:
<ul>
<li>Isabelle 2012: <a href="../release/afp-<!--#echo var="name" -->-2012-07-30.tar.gz">afp-<!--#echo var="name" -->-2012-07-30.tar.gz</a></li>

</ul>    </td></tr>
  </tbody>
</table>
<!-- entry data end -->

</td> </tr> </table>

</body>
</html>
