@inproceedings{barbed-wire:1991,
	abstract = {We develop a calculus for lazy functional programming based on recursion operators associated with data type definitions. For these operators we derive various algebraic laws that are useful in deriving and manipulating programs. We shall show that all example functions in Bird and Wadler's "Introduction to Functional Programming" can  expressed using these operators.},
	author = {E. Meijer and M. Fokkinga and R. Paterson},
	booktitle = "{P}roceedings of the {C}onference on {F}unctional {P}rogramming and {C}omputer {A}rchitecture",
	keywords = {anamorphism, bifunctors, catamorphism, fold, functors, hylomorphism, lazy-evaluation, paramorphism, program-calculation, unfold},
	pages = {124--144},
	posted-at = {2008-08-18 18:44:21},
	priority = {2},
	publisher = {Springer-Verlag},
	title = {Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire},
	year = {1991}
}

@TechReport{FokkingaMeijer:1991,
  author =       {M. M. Fokkinga and Erik Meijer},
  title =        "{P}rogram {C}alculation {P}roperties of {C}ontinuous {A}lgebras",
  institution =  {CWI},
  year =         1991,
  number =    "CS-R9104"
}

@article{GillHutton:2009,
  author = {A. Gill and G. Hutton},
  title = {The worker/wrapper transformation},
  abstract = {The worker/wrapper transformation is a technique for changing the type of a computation, usually with the aim of improving its performance. It has been used by compiler writers for many years, but the technique is little-known in the wider functional programming community, and has never been described precisely. In this article we explain, formalise, and explore the generality of the worker/wrapper transformation. We also provide a systematic recipe for its use as an equational reasoning technique for improving the performance of programs, and illustrate the power of this recipe using a range of examples.},
  journal = "{J}ournal of {F}unctional {P}rogramming",
  publisher = {Cambridge University Press},
  volume = {19},
  number = {2},
  pages = {227--251},
  month = {March},
  year = {2009}
}

@Unpublished{Plotkin:1983,
  author =       {G. Plotkin},
  title =        "{P}isa {N}otes (on {D}omain {T}heory)",
  note =         {Unpublished},
  year =      1983,
  url = "http://homepages.inf.ed.ac.uk/gdp/publications/Domains.ps"
}

@book{Stoy:1977,
 author = {J. E. Stoy},
 title = "Denotational Semantics: The {S}cott-{S}trachey Approach to Programming Language Theory",
 year = {1977},
 publisher = {MIT Press},
}

@phdthesis{Tullsen:PhDThesis,
 author = {M. Tullsen},
 title = {{PATH}, a Program Transformation System for {H}askell},
 year = {2002},
 isbn = {0-493-60483-9},
 order_no = {AAI3046238},
 school = {Yale University},
 address = {New Haven, CT, USA},
 url = "http://www.cs.yale.edu/publications/techreports/tr1229.pdf"
}

@article{Harel:1980,
 author = {Harel, D.},
 title = {On folk theorems},
 journal = "{C}. ACM",
 volume = 23,
 number = 7,
 year = 1980,
 pages = {379--389},
 doi = {http://doi.acm.org/10.1145/358886.358892},
 publisher = {ACM},
}

@TechReport{Sangiorgi:2007,
  author =       {D. Sangiorgi},
  title =        "On the origins of Bisimulation and Coinduction",
  institution =  "Department of Computer Science, University of Bologna",
  year =         2007,
  number =    "2007-24",
  note =      "Draft of a paper to appear in TOPLAS"
}

@inproceedings{Bekic:1969,
 author = {Beki\'{c}, H.},
 title = {Definable Operation in General Algebras, and the Theory of Automata and Flowcharts},
 booktitle = {Programming Languages and Their Definition - Hans Beki\'{c} (1936-1982)},
 year = {1984},
 pages = {30--55},
 publisher = {Springer-Verlag},
}

@inproceedings{SPJ-JL:1991,
 author = {Peyton Jones, S. and Launchbury, J.},
 title = {Unboxed values as first class citizens in a non-strict functional language},
 booktitle = {Proceedings of the 5th {ACM} Conference on Functional programming languages and computer architecture},
 year = {1991},
 pages = {636--666},
 publisher = {Springer-Verlag},
}

@article{HOLCF:1999,
  author = {O. M\"uller and T. Nipkow and D. von Oheimb and O. Slotosch},
  title = {{HOLCF = HOL + LCF}},
  journal="{J}ournal of {F}unctional {P}rogramming",volume=9,pages={191--223},
  year=1999
}

@article{BurstallDarlington:1977,
 author = {R. M. Burstall and J. Darlington},
 title = {A Transformation System for Developing Recursive Programs},
 journal = "{J}. {ACM}",
 volume = {24},
 number = {1},
 year = {1977},
 pages = {44--67},
 doi = {http://doi.acm.org/10.1145/321992.321996},
 publisher = {ACM},
 address = {New York, NY, USA},
 }
