## configurables

SESSION-NAME = Slicing
BASE-IMAGE = HOL

## targets

default: Slicing
# usually empty:
images:
test: $(SESSION-NAME)

all: test


## global settings

SRC = $(ISABELLE_HOME)/src
OUT = $(ISABELLE_OUTPUT)
LOG = $(OUT)/log

# turn image into absolute path according to ISABELLE_IMAGE_PATH or OUT
ifeq ($(ISABELLE_IMAGE_PATH),)
IMAGE=$(OUT)/$(BASE-IMAGE)
else
IMAGE=$(ISABELLE_IMAGE_PATH)$(BASE-IMAGE)
endif

USEDIR = $(ISABELLE_TOOL) usedir -v true -i true -V outline=/proof,/ML -g true -d pdf -P "http://isabelle.in.tum.de/library/"
BUILD = $(ISABELLE_TOOL) usedir -b -v true -i false -g false -d false

# time limit (in sec)
MAXTIME = 5400


## dependencies


# test run and proof document

$(SESSION-NAME): $(LOG)/$(BASE-IMAGE)-$(SESSION-NAME).gz

$(LOG)/$(BASE-IMAGE)-$(SESSION-NAME).gz: $(OUT)/Jinja ROOT.ML \
  Basic/*.thy Dynamic/*.thy StaticIntra/*.thy While/*.thy JinjaVM/*.thy \
  document/root.tex 
	cd ..; ulimit -t $(MAXTIME); $(USEDIR) Jinja $(SESSION-NAME)

Jinja: $(OUT)/Jinja

$(OUT)/Jinja: $(OUT)/Jinja-BV ../Jinja/ROOT-Comp.ML ../Jinja/Compiler/*.thy
	ulimit -t $(MAXTIME); cd ../Jinja; $(BUILD) -f ROOT-Comp.ML Jinja-BV Jinja

$(OUT)/Jinja-BV: $(OUT)/Jinja-J ../Jinja/ROOT-BV.ML ../Jinja/DFA/*.thy ../Jinja/BV/*.thy 
	ulimit -t $(MAXTIME); cd ../Jinja; $(BUILD) -f ROOT-BV.ML Jinja-J Jinja-BV

$(OUT)/Jinja-J: $(IMAGE) ../Jinja/ROOT-J.ML ../Jinja/Common/*.thy ../Jinja/J/*.thy ../Jinja/JVM/*.thy
	ulimit -t $(MAXTIME); cd ../Jinja; $(BUILD) -f ROOT-J.ML $(IMAGE) Jinja-J


## clean

clean:
	@rm -f $(LOG)/$(BASE-IMAGE)-$(SESSION-NAME).gz
	@rm -f $(OUT)/$(SESSION-NAME)
