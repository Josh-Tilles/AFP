#!/usr/bin/env bash
#
# $Id: regression,v 1.15 2006-11-18 05:58:37 lsf37 Exp $
# Author: Gerwin Klein, NICTA
#
# Automated regression test to be run from cron.
# Sends email to maintainers if test fails.
#
# Relies on being run in the isatest environment.
# 

. ~/.bashrc

## settings

ISABELLE_RELEASES=/home/isabelle
ISABELLE_DEVEL=~/tmp/isadist/Isabelle
WORKING_COPY=~/afp
DATE=$(date "+%Y-%m-%d")

LOG=~/afp-log/afp-test
MASTERLOG=~/afp-log/afp-test.log
REPORT=~/afp-log/report

SHORT=at-poly
SETTINGS=~/settings/$SHORT

TMP=/tmp/regression.mail.tmp
while [ -e $TMP ]; do TMP=$TMP.x; done

#
PRG="$(basename "$0")"

## functions

function usage()
{
  echo
  echo "Usage: $PRG [-f] [-|release_tag]"
  echo
  echo "  Runs testall from cron and logs output"
  echo
  echo "Options: -f   only run test that are marked as frequent"
  echo 
  exit 1
}

function fail()
{
  echo "$1" >&2
  exit 2
}

## 

if [ "$1" == "-f" ]; then
	FRQ="-f"
	shift
fi

[ "$#" != "1" -o "$1" = "-?" ] && usage

if [ "$1" == "-" ]; then
  TAG="-A"
  AFP_VER="development"
  WORKING_COPY=$WORKING_COPY/devel
  ISATOOL=$ISABELLE_DEVEL/bin/isatool
    
  ERRORDIR=$HOME/var
  ERRORLOG=$ERRORDIR/error.log
  RUNNING=$HOME/var/running
  if [ -f "$RUNNING/$SHORT.running" -o -e $ERRORLOG ]; then
    echo "`date` $HOSTNAME: Skipped test. Isabelle devel version broken." >> $MASTERLOG
    exit 1
  fi
  cat $SETTINGS >> $ISABELLE_DEVEL/etc/settings
  ML_IDENTIFIER=`$ISATOOL getenv -b ML_IDENTIFIER` || fail "could not identify ML system"
  export ISABELLE_IMAGE_PATH="$HOME/isabelle-$SHORT/heaps/$ML_IDENTIFIER/"
  LOG=$LOG-devel-$DATE.log
  SNAPSHOT=1;
  REPORT=$REPORT-devel
else
  TAG="-r $1"
  AFP_VER="release ($1)"
  WORKING_COPY=$WORKING_COPY/release
  ISATOOL=$ISABELLE_RELEASES/$1/bin/isatool
  LOG=$LOG-$1-$DATE.log
  REPORT=$REPORT-$1
fi

. $WORKING_COPY/admin/main-config || fail "could not read main-config."
MAIL=$WORKING_COPY/admin/mail-attach

echo "Start test at `date`, $HOSTNAME" > $LOG
echo >> $LOG
echo "begin cvs update" >> $LOG

# cvs update to newest version of archive 
cd $WORKING_COPY || fail "could not cd to $WORKING_COPY"
cvs -q up -P -d $TAG >> $LOG 2>&1 || fail "could not CVS update."

echo "end cvs update" >> $LOG
echo >> $LOG

# run test
nice $WORKING_COPY/admin/testall $FRQ -t $ISATOOL -c >> $LOG 2>&1
FAILURE=$?

ELAPSED=$("$HOME/bin/showtime" "$SECONDS")

echo >> $LOG
echo "End test on `date`, $HOSTNAME, elapsed time: $ELAPSED" >> $LOG

# generate report
DIFF=`$WORKING_COPY/admin/report.pl $LOG $REPORT`

# send mail on status changes
if [ -n "$DIFF" ]; then
  cat > $TMP <<EOF
The status of the following AFP entries changed:
$DIFF

Tested version: $AFP_VER
Test ended on: $HOSTNAME, `date`.

Have a nice day,
  isatest

EOF
  for R in $MAIN_NOTIFY; do
    $MAIL 'status changed (AFP)' "$R" $TMP $REPORT $LOG
  done  
fi

# send email to maintainer if there was a problem
if [ "$FAILURE" != "0" ]; then
  FAIL=`tail -4 $LOG | head -1`
  echo "`date`, $AFP_VER: test failed on [$FAIL]. Elapsed time: $ELAPSED" >> $MASTERLOG
  for E in $FAIL; do
    (
      . $WORKING_COPY/thys/$E/config || fail "error reading config for $E"
      if [ "$FREQUENT" == "yes" ]; then
        cat > $TMP <<EOF
Session [$E] in the automated afp test failed. 
Tested version: $AFP_VER
Test ended on: $HOSTNAME, `date`.

To reproduce the error, check out the $AFP_VER version of the
archive from sourceforge and run "isatool make" on your session.

This is an automatically generated email. To switch off these 
notifications, edit thys/$E/config and cvs commit the changes.

Have a nice day,
  isatest

EOF
        for R in $NOTIFY; do
          $MAIL 'test failed (Archive of Formal Proofs)' "$R" $TMP $LOG
        done
      fi
    )
  done
else
  echo "`date`, $HOSTNAME, $AFP_VER: All tests successful. Elapsed time: $ELAPSED" >> $MASTERLOG
fi

# clean up tmp
rm -f $TMP

# make devel snapshot
if [ "$SNAPSHOT" == "1" ]; then
    EXPORT=afp-devel
    STATUS=entry-status.txt
    WEB=~/html-data/afp
    cp $REPORT $WEB/$STATUS
    cvs -Q export -D now -d $EXPORT thys
    cp $REPORT $EXPORT/$STATUS
    echo >> $EXPORT/$STATUS
    echo `date` >> $EXPORT/$STATUS
    tar cf $EXPORT.tar $EXPORT
    gzip --best -f $EXPORT.tar
    mv $EXPORT.tar.gz $WEB
    rm -rf $EXPORT
fi
